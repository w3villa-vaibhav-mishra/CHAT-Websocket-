{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useEventSource = void 0;\nvar react_1 = require(\"react\");\nvar use_websocket_1 = require(\"./use-websocket\");\nvar constants_1 = require(\"./constants\");\nvar useEventSource = function (url, _a, connect) {\n  if (_a === void 0) {\n    _a = constants_1.DEFAULT_EVENT_SOURCE_OPTIONS;\n  }\n  var withCredentials = _a.withCredentials,\n    events = _a.events,\n    options = __rest(_a, [\"withCredentials\", \"events\"]);\n  if (connect === void 0) {\n    connect = true;\n  }\n  var optionsWithEventSource = __assign(__assign({}, options), {\n    eventSourceOptions: {\n      withCredentials: withCredentials\n    }\n  });\n  var eventsRef = (0, react_1.useRef)(constants_1.EMPTY_EVENT_HANDLERS);\n  if (events) {\n    eventsRef.current = events;\n  }\n  var _b = (0, use_websocket_1.useWebSocket)(url, optionsWithEventSource, connect),\n    lastMessage = _b.lastMessage,\n    readyState = _b.readyState,\n    getWebSocket = _b.getWebSocket;\n  (0, react_1.useEffect)(function () {\n    if (lastMessage === null || lastMessage === void 0 ? void 0 : lastMessage.type) {\n      Object.entries(eventsRef.current).forEach(function (_a) {\n        var type = _a[0],\n          handler = _a[1];\n        if (type === lastMessage.type) {\n          handler(lastMessage);\n        }\n      });\n    }\n  }, [lastMessage]);\n  return {\n    lastEvent: lastMessage,\n    readyState: readyState,\n    getEventSource: getWebSocket\n  };\n};\nexports.useEventSource = useEventSource;","map":{"version":3,"names":["react_1","require","use_websocket_1","constants_1","useEventSource","url","_a","connect","DEFAULT_EVENT_SOURCE_OPTIONS","withCredentials","events","options","__rest","optionsWithEventSource","__assign","eventSourceOptions","eventsRef","useRef","EMPTY_EVENT_HANDLERS","current","_b","useWebSocket","lastMessage","readyState","getWebSocket","useEffect","type","Object","entries","forEach","handler","lastEvent","getEventSource","exports"],"sources":["/home/vaibav/project/chat-app/node_modules/react-use-websocket/src/lib/use-event-source.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\nimport { useWebSocket } from './use-websocket'\nimport { DEFAULT_EVENT_SOURCE_OPTIONS, EMPTY_EVENT_HANDLERS } from './constants'\nimport { EventSourceOptions, Options, EventSourceHook, EventSourceEventHandlers } from './types';\n\nexport const useEventSource = (\n  url: string | (() => string | Promise<string>) | null,\n  { withCredentials, events, ...options }: EventSourceOptions = DEFAULT_EVENT_SOURCE_OPTIONS,\n  connect: boolean = true,\n): EventSourceHook => {\n  const optionsWithEventSource: Options = {\n      ...options,\n      eventSourceOptions: {\n        withCredentials,\n      }\n  };\n  const eventsRef = useRef<EventSourceEventHandlers>(EMPTY_EVENT_HANDLERS);\n  if (events) {\n    eventsRef.current = events\n  }\n\n  const {\n    lastMessage,\n    readyState,\n    getWebSocket,\n  } = useWebSocket(\n    url,\n    optionsWithEventSource,\n    connect,\n  );\n\n  useEffect(() => {\n    if (lastMessage?.type) {\n        Object.entries(eventsRef.current).forEach(([type, handler]) => {\n            if (type === lastMessage.type) {\n                handler(lastMessage);\n            }\n        });\n    }\n  }, [lastMessage]);\n\n  return {\n    lastEvent: lastMessage,\n    readyState,\n    getEventSource: getWebSocket,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAGO,IAAMG,cAAc,GAAG,SAAAA,CAC5BC,GAAqD,EACrDC,EAA0F,EAC1FC,OAAuB;EADvB,IAAAD,EAAA;IAAAA,EAAA,GAA8DH,WAAA,CAAAK,4BAA4B;EAAA;EAAxF,IAAAC,eAAe,GAAAH,EAAA,CAAAG,eAAA;IAAEC,MAAM,GAAAJ,EAAA,CAAAI,MAAA;IAAKC,OAAO,GAAAC,MAAA,CAAAN,EAAA,EAArC,6BAAuC,CAAF;EACrC,IAAAC,OAAA;IAAAA,OAAA,OAAuB;EAAA;EAEvB,IAAMM,sBAAsB,GAAAC,QAAA,CAAAA,QAAA,KACrBH,OAAO;IACVI,kBAAkB,EAAE;MAClBN,eAAe,EAAAA;;EAChB,EACJ;EACD,IAAMO,SAAS,GAAG,IAAAhB,OAAA,CAAAiB,MAAM,EAA2Bd,WAAA,CAAAe,oBAAoB,CAAC;EACxE,IAAIR,MAAM,EAAE;IACVM,SAAS,CAACG,OAAO,GAAGT,MAAM;EAC5B;EAEM,IAAAU,EAAA,GAIF,IAAAlB,eAAA,CAAAmB,YAAY,EACdhB,GAAG,EACHQ,sBAAsB,EACtBN,OAAO,CACR;IAPCe,WAAW,GAAAF,EAAA,CAAAE,WAAA;IACXC,UAAU,GAAAH,EAAA,CAAAG,UAAA;IACVC,YAAY,GAAAJ,EAAA,CAAAI,YAKb;EAED,IAAAxB,OAAA,CAAAyB,SAAS,EAAC;IACR,IAAIH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,IAAI,EAAE;MACnBC,MAAM,CAACC,OAAO,CAACZ,SAAS,CAACG,OAAO,CAAC,CAACU,OAAO,CAAC,UAACvB,EAAe;YAAdoB,IAAI,GAAApB,EAAA;UAAEwB,OAAO,GAAAxB,EAAA;QACrD,IAAIoB,IAAI,KAAKJ,WAAW,CAACI,IAAI,EAAE;UAC3BI,OAAO,CAACR,WAAW,CAAC;QACxB;MACJ,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,OAAO;IACLS,SAAS,EAAET,WAAW;IACtBC,UAAU,EAAAA,UAAA;IACVS,cAAc,EAAER;GACjB;AACH,CAAC;AAzCYS,OAAA,CAAA7B,cAAc,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}