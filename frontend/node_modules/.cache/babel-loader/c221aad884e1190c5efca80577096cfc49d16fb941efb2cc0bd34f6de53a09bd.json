{"ast":null,"code":"var _jsxFileName = \"/home/vaibav/project/chat-app/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]); // State to hold chat history\n  const socket = new WebSocket(\"ws://localhost:5000\");\n  useEffect(() => {\n    socket.onopen = () => {\n      console.log(\"✅ Connected to WebSocket\");\n      socket.send(\"Hello, bot!\"); // Send a test message\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.history) {\n        // Set chat history received from the server\n        setChatHistory(data.history);\n      } else if (data.message) {\n        // Update chat history with the bot's response\n        setChatHistory(prevHistory => [...prevHistory, {\n          role: \"assistant\",\n          content: data.message\n        }]);\n      }\n    };\n    socket.onerror = error => console.error(\"❌ WebSocket Error:\", error);\n    socket.onclose = () => console.warn(\"⚠️ WebSocket Disconnected\");\n    return () => {\n      socket.close(); // Close WebSocket connection when the component unmounts\n    };\n  }, []);\n\n  // Render chat history and input field\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === \"user\" ? \"You\" : \"Bot\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          socket.send(e.target.value); // Send message to the WebSocket server\n          e.target.value = \"\"; // Clear input field\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"lw6N3Q8SWK22jjgE+N3fbULJpoE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chat","_s","chatHistory","setChatHistory","socket","WebSocket","onopen","console","log","send","onmessage","event","data","JSON","parse","history","message","prevHistory","role","content","onerror","error","onclose","warn","close","children","className","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onKeyDown","e","key","target","value","_c","$RefreshReg$"],"sources":["/home/vaibav/project/chat-app/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Chat = () => {\n    const [chatHistory, setChatHistory] = useState([]); // State to hold chat history\n    const socket = new WebSocket(\"ws://localhost:5000\");\n\n    useEffect(() => {\n        socket.onopen = () => {\n            console.log(\"✅ Connected to WebSocket\");\n            socket.send(\"Hello, bot!\"); // Send a test message\n        };\n\n        socket.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            if (data.history) {\n                // Set chat history received from the server\n                setChatHistory(data.history);\n            } else if (data.message) {\n                // Update chat history with the bot's response\n                setChatHistory((prevHistory) => [\n                    ...prevHistory,\n                    { role: \"assistant\", content: data.message }\n                ]);\n            }\n        };\n\n        socket.onerror = (error) => console.error(\"❌ WebSocket Error:\", error);\n        socket.onclose = () => console.warn(\"⚠️ WebSocket Disconnected\");\n\n        return () => {\n            socket.close(); // Close WebSocket connection when the component unmounts\n        };\n    }, []);\n\n    // Render chat history and input field\n    return (\n        <div>\n            <div className=\"chat\">\n                {chatHistory.map((msg, index) => (\n                    <div key={index} className={msg.role}>\n                        <strong>{msg.role === \"user\" ? \"You\" : \"Bot\"}:</strong> {msg.content}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                        socket.send(e.target.value); // Send message to the WebSocket server\n                        e.target.value = \"\"; // Clear input field\n                    }\n                }}\n            />\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}