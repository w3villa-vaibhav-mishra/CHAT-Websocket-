{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.heartbeat = heartbeat;\nvar constants_1 = require(\"./constants\");\nfunction getLastMessageTime(lastMessageTime) {\n  if (Array.isArray(lastMessageTime)) {\n    return lastMessageTime.reduce(function (p, c) {\n      return p.current > c.current ? p : c;\n    }).current;\n  }\n  return lastMessageTime.current;\n}\nfunction heartbeat(ws, lastMessageTime, options) {\n  var _a = options || {},\n    _b = _a.interval,\n    interval = _b === void 0 ? constants_1.DEFAULT_HEARTBEAT.interval : _b,\n    _c = _a.timeout,\n    timeout = _c === void 0 ? constants_1.DEFAULT_HEARTBEAT.timeout : _c,\n    _d = _a.message,\n    message = _d === void 0 ? constants_1.DEFAULT_HEARTBEAT.message : _d;\n  // how often check interval between ping messages\n  // minimum is 100ms\n  // maximum is ${interval / 10}ms\n  var intervalCheck = Math.max(100, interval / 10);\n  var lastPingSentAt = Date.now();\n  var heartbeatInterval = setInterval(function () {\n    var timeNow = Date.now();\n    var lastMessageReceivedAt = getLastMessageTime(lastMessageTime);\n    if (lastMessageReceivedAt + timeout <= timeNow) {\n      console.warn(\"Heartbeat timed out, closing connection, last message received \".concat(timeNow - lastMessageReceivedAt, \"ms ago, last ping sent \").concat(timeNow - lastPingSentAt, \"ms ago\"));\n      ws.close();\n    } else {\n      if (lastMessageReceivedAt + interval <= timeNow && lastPingSentAt + interval <= timeNow) {\n        try {\n          if (typeof message === 'function') {\n            ws.send(message());\n          } else {\n            ws.send(message);\n          }\n          lastPingSentAt = timeNow;\n        } catch (err) {\n          console.error(\"Heartbeat failed, closing connection\", err instanceof Error ? err.message : err);\n          ws.close();\n        }\n      }\n    }\n  }, intervalCheck);\n  ws.addEventListener(\"close\", function () {\n    clearInterval(heartbeatInterval);\n  });\n  return function () {};\n}","map":{"version":3,"names":["exports","heartbeat","constants_1","require","getLastMessageTime","lastMessageTime","Array","isArray","reduce","p","c","current","ws","options","_a","_b","interval","DEFAULT_HEARTBEAT","_c","timeout","_d","message","intervalCheck","Math","max","lastPingSentAt","Date","now","heartbeatInterval","setInterval","timeNow","lastMessageReceivedAt","console","warn","concat","close","send","err","error","Error","addEventListener","clearInterval"],"sources":["/home/vaibav/project/chat/frontend/node_modules/react-use-websocket/src/lib/heartbeat.ts"],"sourcesContent":["import { MutableRefObject } from \"react\";\nimport { DEFAULT_HEARTBEAT } from \"./constants\";\nimport { HeartbeatOptions } from \"./types\";\n\nfunction getLastMessageTime(lastMessageTime: MutableRefObject<number> | MutableRefObject<number>[]): number {\n  if (Array.isArray(lastMessageTime)) {\n    return lastMessageTime.reduce((p, c) => { return (p.current > c.current) ? p : c; }).current;\n  }\n  return lastMessageTime.current\n}\n\nexport function heartbeat(ws: WebSocket, lastMessageTime: MutableRefObject<number> | MutableRefObject<number>[], options?: HeartbeatOptions): () => void {\n  const {\n    interval = DEFAULT_HEARTBEAT.interval,\n    timeout = DEFAULT_HEARTBEAT.timeout,\n    message = DEFAULT_HEARTBEAT.message,\n  } = options || {};\n\n  // how often check interval between ping messages\n  // minimum is 100ms\n  // maximum is ${interval / 10}ms\n  const intervalCheck = Math.max(100, interval / 10);\n\n  let lastPingSentAt = Date.now();\n\n  const heartbeatInterval = setInterval(() => {\n    const timeNow = Date.now();\n    const lastMessageReceivedAt = getLastMessageTime(lastMessageTime);\n    if (lastMessageReceivedAt + timeout <= timeNow) {\n      console.warn(`Heartbeat timed out, closing connection, last message received ${timeNow - lastMessageReceivedAt}ms ago, last ping sent ${timeNow - lastPingSentAt}ms ago`);\n      ws.close();\n    } else {\n      if (lastMessageReceivedAt + interval <= timeNow && lastPingSentAt + interval <= timeNow) {\n        try {\n          if (typeof message === 'function') {\n            ws.send(message());\n          } else {\n            ws.send(message);\n          }\n          lastPingSentAt = timeNow;\n        } catch (err: unknown) {\n          console.error(`Heartbeat failed, closing connection`, err instanceof Error ? err.message : err);\n          ws.close();\n        }\n\n      }\n    }\n  }, intervalCheck);\n\n  ws.addEventListener(\"close\", () => {\n    clearInterval(heartbeatInterval);\n  });\n\n  return () => { };\n}\n"],"mappings":";;;;;AAWAA,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAVA,IAAAC,WAAA,GAAAC,OAAA;AAGA,SAASC,kBAAkBA,CAACC,eAAsE;EAChG,IAAIC,KAAK,CAACC,OAAO,CAACF,eAAe,CAAC,EAAE;IAClC,OAAOA,eAAe,CAACG,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAO,OAAQD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,GAAIF,CAAC,GAAGC,CAAC;IAAE,CAAC,CAAC,CAACC,OAAO;EAC9F;EACA,OAAON,eAAe,CAACM,OAAO;AAChC;AAEA,SAAgBV,SAASA,CAACW,EAAa,EAAEP,eAAsE,EAAEQ,OAA0B;EACnI,IAAAC,EAAA,GAIFD,OAAO,IAAI,EAAE;IAHfE,EAAA,GAAAD,EAAA,CAAAE,QAAqC;IAArCA,QAAQ,GAAAD,EAAA,cAAGb,WAAA,CAAAe,iBAAiB,CAACD,QAAQ,GAAAD,EAAA;IACrCG,EAAA,GAAAJ,EAAA,CAAAK,OAAmC;IAAnCA,OAAO,GAAAD,EAAA,cAAGhB,WAAA,CAAAe,iBAAiB,CAACE,OAAO,GAAAD,EAAA;IACnCE,EAAA,GAAAN,EAAA,CAAAO,OAAmC;IAAnCA,OAAO,GAAAD,EAAA,cAAGlB,WAAA,CAAAe,iBAAiB,CAACI,OAAO,GAAAD,EACpB;EAEjB;EACA;EACA;EACA,IAAME,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAER,QAAQ,GAAG,EAAE,CAAC;EAElD,IAAIS,cAAc,GAAGC,IAAI,CAACC,GAAG,EAAE;EAE/B,IAAMC,iBAAiB,GAAGC,WAAW,CAAC;IACpC,IAAMC,OAAO,GAAGJ,IAAI,CAACC,GAAG,EAAE;IAC1B,IAAMI,qBAAqB,GAAG3B,kBAAkB,CAACC,eAAe,CAAC;IACjE,IAAI0B,qBAAqB,GAAGZ,OAAO,IAAIW,OAAO,EAAE;MAC9CE,OAAO,CAACC,IAAI,CAAC,kEAAAC,MAAA,CAAkEJ,OAAO,GAAGC,qBAAqB,6BAAAG,MAAA,CAA0BJ,OAAO,GAAGL,cAAc,WAAQ,CAAC;MACzKb,EAAE,CAACuB,KAAK,EAAE;IACZ,CAAC,MAAM;MACL,IAAIJ,qBAAqB,GAAGf,QAAQ,IAAIc,OAAO,IAAIL,cAAc,GAAGT,QAAQ,IAAIc,OAAO,EAAE;QACvF,IAAI;UACF,IAAI,OAAOT,OAAO,KAAK,UAAU,EAAE;YACjCT,EAAE,CAACwB,IAAI,CAACf,OAAO,EAAE,CAAC;UACpB,CAAC,MAAM;YACLT,EAAE,CAACwB,IAAI,CAACf,OAAO,CAAC;UAClB;UACAI,cAAc,GAAGK,OAAO;QAC1B,CAAC,CAAC,OAAOO,GAAY,EAAE;UACrBL,OAAO,CAACM,KAAK,CAAC,sCAAsC,EAAED,GAAG,YAAYE,KAAK,GAAGF,GAAG,CAAChB,OAAO,GAAGgB,GAAG,CAAC;UAC/FzB,EAAE,CAACuB,KAAK,EAAE;QACZ;MAEF;IACF;EACF,CAAC,EAAEb,aAAa,CAAC;EAEjBV,EAAE,CAAC4B,gBAAgB,CAAC,OAAO,EAAE;IAC3BC,aAAa,CAACb,iBAAiB,CAAC;EAClC,CAAC,CAAC;EAEF,OAAO,aAAQ,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}